diff --git a/registry/session.go b/registry/session.go
index d09babd..102263b 100644
--- a/registry/session.go
+++ b/registry/session.go
@@ -15,6 +15,7 @@ import (
 	"net/http"
 	"net/http/cookiejar"
 	"net/url"
+	"regexp"
 	"strconv"
 	"strings"
 
@@ -32,6 +33,7 @@ var (
 	// ErrRepoNotFound is returned if the repository didn't exist on the
 	// remote side
 	ErrRepoNotFound = errors.New("Repository not found")
+	reURLScheme     = regexp.MustCompile(`^[^:]+://`)
 )
 
 // A Session is used to communicate with a V1 registry
@@ -163,6 +165,18 @@ func (tr *authTransport) CancelRequest(req *http.Request) {
 // NewSession creates a new session
 // TODO(tiborvass): remove authConfig param once registry client v2 is vendored
 func NewSession(client *http.Client, authConfig *types.AuthConfig, endpoint *Endpoint) (r *Session, err error) {
+	if authConfig != nil && authConfig.ServerAddress != "" {
+		serverAddress := authConfig.ServerAddress
+		if !reURLScheme.MatchString(serverAddress) {
+			serverAddress = "http://" + serverAddress
+		}
+		parsed, err := url.Parse(serverAddress)
+		if err == nil && parsed.Host != endpoint.URL.Host {
+			logrus.Infof("authConfig does not conform to given endpoint (%s != %s)", parsed.Host, endpoint.URL.Host)
+			*authConfig = types.AuthConfig{}
+		}
+	}
+
 	r = &Session{
 		authConfig:    authConfig,
 		client:        client,
